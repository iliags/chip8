[package]
name = "chip8"
version = "0.1.19"
authors = ["James Lennon"]
edition = "2021"
publish = false
build = "build.rs"
default-run = "chip8"
license = "MIT/Apache-2.0"
include = ["LICENSE-APACHE", "LICENSE-MIT", "**/*.rs", "Cargo.toml"]
exclude = [
    # Exclude source art assets
    "art/**/*",
]


[[bin]]
name = "chip8"
path = "src/main.rs"


[workspace]
members = ["crates/*"]
resolver = "2"

[workspace.lints.rust]
unsafe_op_in_unsafe_fn = "warn"
missing_docs = "warn"
unsafe_code = "deny"

[workspace.lints.clippy]
#pedantic = "warn"

[workspace.dependencies]
c8 = { path = "crates/c8" }
c8_i18n = { path = "crates/c8_i18n" }

# Accessibility
fluent = "0.16"
fluent-templates = "0.13"
unic-langid = "0.9"

# Random number generator
rand = { version = "0.9" }

# Serialization
ron = "0.8"
serde = { version = "1", features = ["derive"] }

# Web
wasm-bindgen-futures = "0.4"
wasm-bindgen = "0.2"
web-sys = "0.3"
futures = "0.3"


[dependencies]
egui = "0.31"
eframe = { version = "0.31", default-features = false, features = [
    "default_fonts", # Embed the default egui fonts.
    "glow",          # Use the glow rendering backend. Alternative: "wgpu".
    "persistence",   # Enable restoring app state when restarting the app.
    "wayland",
] }
log = "0.4"
rfd = { version = "0.15" }

fluent = { workspace = true }
fluent-templates = { workspace = true }
unic-langid = { workspace = true }
ron = { workspace = true }
serde = { workspace = true }

c8 = { workspace = true }
c8_i18n = { workspace = true }
futures = { workspace = true }


[build-dependencies]
embed-resource = { version = "3.0" }

[dev-dependencies]
criterion = { version = "0.5", features = ["html_reports"] }
rand = { workspace = true }


#[[bench]]
#name = "pixel_benchmark"
#harness = false

[[bench]]
name = "match_benchmark"
harness = false

# native:
[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
env_logger = "0.11"


# web:
[target.'cfg(target_arch = "wasm32")'.dependencies]
wasm-bindgen-futures = { workspace = true }
web-sys = { workspace = true }
getrandom = { version = "0.3", features = ["wasm_js"] }

[profile.dev]
#opt-level = 1

[profile.release]
opt-level = 2
lto = true

# Optimize all dependencies even in debug builds
[profile.dev.package."*"]
opt-level = 2

[features]
default = ["profiling"]
#default = []
profiling = []
